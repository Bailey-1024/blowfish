
[{"content":" Hive小问题 # Hive SQL 的执行流程 # 用户首先输入SQL HIve驱动器（Driver）中的解析器将sql解析会抽象语法树，并对抽象语法树进行语义分析 对抽象语法树进行优化 编译器（Compiler）将抽象语法树 （AST） 编译生成逻辑执行计划，接着再将逻辑计划优化并转换为物理计划 执行物理计划 返回结果 简化流程图：\nHive 自定义函数的流程，有什么作用 # 编写自定义函数的流程 # 编写Java代码，创建一个java类，这个类需要根据自定义函数的类型（UDF、UDAF、UDTF）来继相应的类，重写里面的initializ（用于定义输入和输出的参数类型），evaluate（用于实现具体的业务逻辑）等。 打包成jar包 上传到hive集群中 注册函数 使用函数 自定义函数的作用 # 解决特定的业务需求 可以扩展HQL的功能 提高查询效率 提高代码的复用性和模块化 ","date":"2024-07-26","externalUrl":null,"permalink":"/docs/speech-7-26/","section":"Docs","summary":"Hive小问题 # Hive SQL 的执行流程 # 用户首先输入SQL HIve驱动器（Driver）中的解析器将sql解析会抽象语法树，并对抽象语法树进行语义分析 对抽象语法树进行优化 编译器（Compiler）将抽象语法树 （AST） 编译生成逻辑执行计划，接着再将逻辑计划优化并转换为物理计划 执行物理计划 返回结果 简化流程图：","title":"speech-7-26","type":"docs"},{"content":" 检查 MySQL 服务是否启动。 [root@node01 ~]# systemctl status mysqld\n启动 ZooKeeper（三台机器都需要执行，使用自己写的脚本） [root@node01 ~]# zookeeper start 或者zookeeper内置命令 zkServer.sh start zkServer.sh status\n启动 HDFS + YARN。 [root@node01 ~]# start-all.sh\n启动 JobHistory. [root@node01 ~]# mapred \u0026ndash;daemon start historyserver\n初始化 hive 数据库（第一次启动时执行）。 [root@node01 ~]# schematool -dbType mysql -initSchema\n启动 MetaStore 服务。\n​ 前台启动，学习期间推荐使用这种方式 [root@node01 ~]# hive \u0026ndash;service metastore\n​ 后台启动 [root@node01 ~]# nohup hive \u0026ndash;service metastore \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\n启动 HiveServer2 服务。 前台启动，学习期间推荐使用这种方式 [root@node01 ~]# hiveserver2 后台启动 [root@node01 ~]# nohup hiveserver2 \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\n客户端连接 # 连接方式一 [root@node03 ~]# hive 退出命令行命令：exit; 客户端连接方式二 [root@node03 ~]# beeline -u jdbc:hive2://node01:10000 -n root 退出命令行命令：!exit 或者 !quit 关闭 # 先关闭 HiveServer2 服务和 MetaStore 服务（前台启动的话直接 Ctrl + C 即可）。\n再关闭 JobHistory 和 Hadoop。 [root@node01 ~]# mapred \u0026ndash;daemon stop historyserver [root@node01 ~]# stop-all.sh\n再关闭 ZooKeeper（三台机器都需要执行，使用自己写的脚本）。\n[root@node01 ~]# zookeeper stop 或者zookeeper内置命令 zkServer.sh stop\n","date":"2024-07-25","externalUrl":null,"permalink":"/docs/hive-start/","section":"Docs","summary":"检查 MySQL 服务是否启动。 [root@node01 ~]# systemctl status mysqld","title":"hive-start","type":"docs"},{"content":"","date":"2024-07-26","externalUrl":null,"permalink":"/docs/","section":"Docs","summary":"","title":"Docs","type":"docs"},{"content":"","date":"2024-07-26","externalUrl":null,"permalink":"/tags/hive/","section":"Tags","summary":"","title":"Hive","type":"tags"},{"content":"","date":"2024-07-26","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2024-07-26","externalUrl":null,"permalink":"/","section":"李","summary":"","title":"李","type":"page"},{"content":"","date":"2024-07-26","externalUrl":null,"permalink":"/tags/%E6%9D%8E/","section":"Tags","summary":"","title":"李","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]